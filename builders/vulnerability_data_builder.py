class VulnerabilityDataBuilder:

    @staticmethod
    def build(data):
        return {
            'GENERAL': VulnerabilityDataBuilder._build_general_data(data),
            'TOTAL': VulnerabilityDataBuilder._build_total_data(data),
            'TOTAL_BY_SERVICE': VulnerabilityDataBuilder._build_total_by_service(data),
            'ALL': VulnerabilityDataBuilder._build_all_data(data)
        }

    @staticmethod
    def _build_general_data(data):
        return [{
            'Artifact Name': data['ArtifactName'],
            'Artifact Type': data['ArtifactType']
        }]

    @staticmethod
    def _build_total_data(data):
        total_data = [{'CRITICAL': 0, 'HIGH': 0, 'MEDIUM': 0, 'LOW': 0}]
        results = data.get('Results', [])
        for entry in results:
            for misconfiguration in entry.get("Misconfigurations", []):
                severity = misconfiguration.get("Severity", "")
                if severity:
                    total_data[0][severity] += 1
        return total_data

    @staticmethod
    def _build_total_by_service(data):
        total_by_service = []
        results = data.get('Results', [])
        for entry in results:
            for misconfiguration in entry.get("Misconfigurations", []):
                severity = misconfiguration.get("Severity", "")
                service = misconfiguration.get('CauseMetadata', {}).get('Service', '')
                if severity:
                    total_by_service.append({'Service': service, 'Severity': severity})
        return total_by_service

    @staticmethod
    def _build_all_data(data):
        all_data = []
        results = data.get('Results', [])
        for entry in results:
            for misconfiguration in entry.get("Misconfigurations", []):
                target = entry.get("Target", "")
                severity = misconfiguration.get("Severity", "")
                service = misconfiguration.get('CauseMetadata', {}).get('Service', '')
                misconfiguration_details = {
                    'ID': misconfiguration.get('ID', ''),
                    'Title': misconfiguration.get('Title', ''),
                    'Target': target,
                    'RootCause_Service': service,
                    'RootCause_Resource': misconfiguration.get('CauseMetadata', {}).get('Resource', ''),
                    'Status': misconfiguration.get('Status', ''),
                    'Description': misconfiguration.get('Description', ''),
                    'Message': misconfiguration.get('Message', ''),
                    'Severity': severity,
                    'Resolution': misconfiguration.get('Resolution', ''),
                    'PrimaryURL': misconfiguration.get('PrimaryURL', ''),
                    'References': '\n'.join(misconfiguration.get('References', []))
                }
                all_data.append(misconfiguration_details)
        return all_data